{"version":3,"sources":["Components/FeedbackCounter/FeedbackCounter.module.css","Components/FeedbackCounter/FeedbackCounter.jsx","App.js","index.js"],"names":["module","exports","FeedbackCounter","state","good","neutral","bad","clicked","total","clickOnGoodRate","setState","clickOnNeutralRate","clickOnBadRate","countPositiveFeedbackPercentage","Math","round","className","styles","wrapper","list","item","onClick","this","type","statWrapper","isActive","statisticList","statisticItem","Component","App","ReactDOM","render","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,QAAU,iCAAiC,KAAO,8BAA8B,KAAO,8BAA8B,OAAS,gCAAgC,KAAO,4DAA4D,QAAU,+DAA+D,IAAM,2DAA2D,cAAgB,mEAAmE,cAAgB,uCAAuC,YAAc,qCAAqC,SAAW,oC,kJCuGtjBC,E,4MApGXC,MAAQ,CACJC,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,SAAS,EACTC,MAAO,G,EAGXC,gBAAkB,WACd,EAAKC,SAAS,CACVN,KAAM,EAAKD,MAAMC,KAAO,EACxBG,SAAS,EACTC,MAAO,EAAKL,MAAMK,MAAQ,K,EAGlCG,mBAAqB,WACjB,EAAKD,SAAS,CACVL,QAAS,EAAKF,MAAME,QAAU,EAC9BE,SAAS,EACTC,MAAO,EAAKL,MAAMK,MAAQ,K,EAIlCI,eAAiB,WACb,EAAKF,SAAS,CACVJ,IAAK,EAAKH,MAAMG,IAAM,EACtBC,SAAS,EACTC,MAAO,EAAKL,MAAMK,MAAQ,K,EAIlCK,gCAAkC,WAC9B,OAAOC,KAAKC,MAAO,IAAM,EAAKZ,MAAMK,MAAS,EAAKL,MAAMC,O,4CAG5D,WACI,OACI,sBAAKY,UAAWC,IAAOC,QAAvB,UACI,uDACA,qBAAIF,UAAWC,IAAOE,KAAtB,UACI,oBAAIH,UAAWC,IAAOG,KAAtB,SACI,wBACIC,QAASC,KAAKb,gBACdc,KAAK,SACLP,UAAWC,IAAOb,KAHtB,oBAQJ,oBAAIY,UAAWC,IAAOG,KAAtB,SACI,wBACIC,QAASC,KAAKX,mBACdY,KAAK,SACLP,UAAWC,IAAOZ,QAHtB,uBAQJ,oBAAIW,UAAWC,IAAOG,KAAtB,SACI,wBACIC,QAASC,KAAKV,eACdW,KAAK,SACLP,UAAWC,IAAOX,IAHtB,sBASPgB,KAAKnB,MAAMI,QACR,sBAAKS,WAAYC,IAAOO,YAAaP,IAAOQ,UAA5C,UACI,4CACA,qBAAIT,UAAWC,IAAOS,cAAtB,UACI,oBAAIV,UAAWC,IAAOU,cAAtB,SACI,0CAAaL,KAAKnB,MAAMC,UAE5B,oBAAIY,UAAWC,IAAOU,cAAtB,SACI,4CAAeL,KAAKnB,MAAME,aAE9B,oBAAIW,UAAWC,IAAOU,cAAtB,SACI,wCAAWL,KAAKnB,MAAMG,SAE1B,oBAAIU,UAAWC,IAAOU,cAAtB,SACI,0CAAaL,KAAKnB,MAAMK,WAE5B,6BACI,sDACuB,IAClBc,KAAKT,kCAFV,eAQZ,0D,GA9FUe,aCOfC,MARf,WACI,OACI,mCACI,cAAC,EAAD,OCAZC,IAASC,OAEL,cAAC,EAAD,IAEAC,SAASC,eAAe,W","file":"static/js/main.6c319bb2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"FeedbackCounter_wrapper__Pz5Cj\",\"list\":\"FeedbackCounter_list__2Dxok\",\"item\":\"FeedbackCounter_item__2dQAq\",\"button\":\"FeedbackCounter_button__2Yk8u\",\"good\":\"FeedbackCounter_good__2dz6t FeedbackCounter_button__2Yk8u\",\"neutral\":\"FeedbackCounter_neutral__2Ytwc FeedbackCounter_button__2Yk8u\",\"bad\":\"FeedbackCounter_bad__2-cOY FeedbackCounter_button__2Yk8u\",\"statisticList\":\"FeedbackCounter_statisticList__EBXDo FeedbackCounter_list__2Dxok\",\"statisticItem\":\"FeedbackCounter_statisticItem__1wEeJ\",\"statWrapper\":\"FeedbackCounter_statWrapper__1J4Fa\",\"isActive\":\"FeedbackCounter_isActive__1syRx\"};","import { Component } from 'react';\r\nimport styles from './FeedbackCounter.module.css';\r\n\r\nclass FeedbackCounter extends Component {\r\n    state = {\r\n        good: 0,\r\n        neutral: 0,\r\n        bad: 0,\r\n        clicked: false,\r\n        total: 0,\r\n    };\r\n\r\n    clickOnGoodRate = () => {\r\n        this.setState({\r\n            good: this.state.good + 1,\r\n            clicked: true,\r\n            total: this.state.total + 1,\r\n        });\r\n    };\r\n    clickOnNeutralRate = () => {\r\n        this.setState({\r\n            neutral: this.state.neutral + 1,\r\n            clicked: true,\r\n            total: this.state.total + 1,\r\n        });\r\n    };\r\n\r\n    clickOnBadRate = () => {\r\n        this.setState({\r\n            bad: this.state.bad + 1,\r\n            clicked: true,\r\n            total: this.state.total + 1,\r\n        });\r\n    };\r\n\r\n    countPositiveFeedbackPercentage = () => {\r\n        return Math.round((100 / this.state.total) * this.state.good);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={styles.wrapper}>\r\n                <h2>Please leave feedback</h2>\r\n                <ul className={styles.list}>\r\n                    <li className={styles.item}>\r\n                        <button\r\n                            onClick={this.clickOnGoodRate}\r\n                            type=\"button\"\r\n                            className={styles.good}\r\n                        >\r\n                            Good\r\n                        </button>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <button\r\n                            onClick={this.clickOnNeutralRate}\r\n                            type=\"button\"\r\n                            className={styles.neutral}\r\n                        >\r\n                            Neutral\r\n                        </button>\r\n                    </li>\r\n                    <li className={styles.item}>\r\n                        <button\r\n                            onClick={this.clickOnBadRate}\r\n                            type=\"button\"\r\n                            className={styles.bad}\r\n                        >\r\n                            Bad\r\n                        </button>\r\n                    </li>\r\n                </ul>\r\n                {this.state.clicked ? (\r\n                    <div className={(styles.statWrapper, styles.isActive)}>\r\n                        <h2>Statistics</h2>\r\n                        <ul className={styles.statisticList}>\r\n                            <li className={styles.statisticItem}>\r\n                                <span>Good: {this.state.good}</span>\r\n                            </li>\r\n                            <li className={styles.statisticItem}>\r\n                                <span>Neutral:{this.state.neutral}</span>\r\n                            </li>\r\n                            <li className={styles.statisticItem}>\r\n                                <span>Bad:{this.state.bad}</span>\r\n                            </li>\r\n                            <li className={styles.statisticItem}>\r\n                                <span>Total:{this.state.total}</span>\r\n                            </li>\r\n                            <li>\r\n                                <span>\r\n                                    Positive feedback:{' '}\r\n                                    {this.countPositiveFeedbackPercentage()}%\r\n                                </span>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                ) : (\r\n                    <h2>No feedback given</h2>\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default FeedbackCounter;\r\n","import FeedbackCounter from './Components/FeedbackCounter';\n\nfunction App() {\n    return (\n        <>\n            <FeedbackCounter />\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}